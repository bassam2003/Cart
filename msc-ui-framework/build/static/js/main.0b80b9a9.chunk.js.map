{"version":3,"sources":["lib/Button/index.js","App.js","reportWebVitals.js","index.js"],"names":["Button","type","onclick","className","color","size","rounded","disabled","children","fullRounded","outlined","flat","sizeStyle","includes","spacing","roundedStyle","coloredButton","outlineButton","border","cn","onClick","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAOMA,EAAS,SAAC,GAYT,IAAD,IAXJC,EAWI,EAXJA,KACAC,EAUI,EAVJA,QACAC,EASI,EATJA,UACAC,EAQI,EARJA,MACAC,EAOI,EAPJA,KACAC,EAMI,EANJA,QACAC,EAKI,EALJA,SACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACAC,EACI,EADJA,KAEMC,EAAY,CAChB,YAAa,CAAC,KAAM,KAAM,MAAMC,SAASR,GACzC,UAAoB,OAATA,GAGPS,EAAWL,EAQb,CACE,YAAsB,OAATJ,EACb,YAAsB,OAATA,EACb,YAAsB,OAATA,EACb,UAAoB,OAATA,GAXb,CACE,SAAS,EACT,OAAiB,OAATA,EACR,OAAiB,OAATA,EACR,OAAiB,OAATA,EACR,OAAiB,OAATA,GASRU,EAAe,CACnB,cAAeT,IAAYG,EAC3B,eAAgBA,GAGZO,GAAa,iCACTZ,IAAWG,GADF,cAEjB,eAA0B,aAAVH,GAAwBG,GAFvB,GAKbU,GAAa,GACjBC,OAAQR,GADS,4BAETN,EAFS,cAEWG,GAFX,6BAGRH,GAAUM,GAAaC,IAASJ,GAHxB,+BAINH,GAAUM,IAAaH,GAJjB,cAKjB,mCAA8C,aAAVH,GAAwBG,GAL3C,GAQnB,OACE,wBACEN,KAAMA,EACNM,SAAUA,EACVJ,UAAWgB,IAAG,MAAD,YAAC,mDACRT,GAAYC,EAAOM,EAAgBD,GACpCJ,GACAG,GACAD,GAJQ,kBAKVX,EAAYA,KAEfiB,QAASlB,EAVX,SAYE,qBAAKC,UAAU,2BAAf,SAA2CK,OAuBjDR,EAAOqB,aAAe,CACpBpB,KAAM,SACNC,QAAS,aACTC,UAAW,GACXK,SAAU,KACVJ,MAAO,UACPC,KAAM,KACNC,SAAS,EACTC,UAAU,EACVE,aAAa,EACbC,UAAU,EACVC,MAAM,GAGOX,QCxFAsB,EAjBH,WACV,OACE,sBAAKnB,UAAU,OAAf,UACE,cAAC,EAAD,CAAQE,KAAK,KAAb,oBACA,cAAC,EAAD,CAAQI,aAAW,EAACJ,KAAK,KAAKD,MAAM,UAAUM,UAAQ,EAACH,UAAQ,EAA/D,mBCKSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1Bb,M","file":"static/js/main.0b80b9a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * TODO:  isLoading\r\n */\r\nconst Button = ({\r\n  type,\r\n  onclick,\r\n  className,\r\n  color,\r\n  size,\r\n  rounded,\r\n  disabled,\r\n  children,\r\n  fullRounded,\r\n  outlined,\r\n  flat,\r\n}) => {\r\n  const sizeStyle = {\r\n    'text-base': ['lg', 'md', 'sm'].includes(size),\r\n    'text-sm': size === 'xs',\r\n  };\r\n\r\n  const spacing = !fullRounded\r\n    ? {\r\n        'px-10': true,\r\n        'py-5': size === 'lg',\r\n        'py-4': size === 'md',\r\n        'py-3': size === 'sm',\r\n        'py-2': size === 'xs',\r\n      }\r\n    : {\r\n        'w-16 h-16': size === 'lg',\r\n        'w-12 h-12': size === 'md',\r\n        'w-10 h-10': size === 'sm',\r\n        'w-8 h-8': size === 'xs',\r\n      };\r\n\r\n  const roundedStyle = {\r\n    'rounded-4xl': rounded && !fullRounded,\r\n    'rounded-full': fullRounded,\r\n  };\r\n\r\n  const coloredButton = {\r\n    [`btn-${color}`]: !disabled,\r\n    'btn-disabled': color === 'disabled' || disabled,\r\n  };\r\n\r\n  const outlineButton = {\r\n    border: outlined,\r\n    [`btn-${color}-outlined`]: !disabled,\r\n    [`text-${color}`]: outlined || (flat && !disabled),\r\n    [`border-${color}`]: outlined && !disabled,\r\n    'text-monochromes text-opacity-25': color === 'disabled' || disabled,\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      disabled={disabled}\r\n      className={cn('btn', {\r\n        ...(outlined || flat ? outlineButton : coloredButton),\r\n        ...sizeStyle,\r\n        ...roundedStyle,\r\n        ...spacing,\r\n        [className]: className,\r\n      })}\r\n      onClick={onclick}\r\n    >\r\n      <div className=\"inline-flex items-center\">{children}</div>\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.oneOf(['button', 'submit']),\r\n  onclick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'error',\r\n    'success',\r\n    'warning',\r\n    'transparent',\r\n    'disabled',\r\n  ]),\r\n  size: PropTypes.oneOf(['lg', 'md', 'sm', 'xs']),\r\n  rounded: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  children: PropTypes.node,\r\n};\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  onclick: () => {},\r\n  className: '',\r\n  children: null,\r\n  color: 'primary',\r\n  size: 'lg',\r\n  rounded: true,\r\n  disabled: false,\r\n  fullRounded: false,\r\n  outlined: false,\r\n  flat: false,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './lib/Button';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"m-10\">\r\n      <Button size=\"md\">Button</Button>\r\n      <Button fullRounded size=\"md\" color=\"success\" outlined disabled>\r\n        B\r\n      </Button>\r\n      {/* <div className=\"h-48 w-48 bg-monochromes\"></div>\r\n      <div className=\"h-48 w-48 bg-monochromes opacity-80 text-white\">80%</div>\r\n      <div className=\"h-48 w-48 bg-monochromes opacity-16 text-white\">16%</div>\r\n      <div className=\"h-48 w-48 bg-monochromes opacity-12 text-white\">12%</div>\r\n      <div className=\"h-48 w-48 bg-gradient-to-r from-success to-success-accent-1\"></div>\r\n      <div className=\"h-48 w-48 \"></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css'\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}